# Monitoring Layer - Stateless Monitoring and Logging Services
# These services can be restarted independently without losing data

services:
  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: wonder-prometheus
    volumes:
      - ./backend/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./backend/monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    networks:
      - wonder-network
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.1
    container_name: wonder-logstash
    volumes:
      - ./backend/monitoring/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "12201:12201/udp"
    networks:
      - wonder-network
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.1
    container_name: wonder-kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - wonder-network
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: wonder-cadvisor
    ports:
      - "8081:8080"
    networks:
      - wonder-network
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

networks:
  wonder-network:
    external: true
    name: wonder-network
